function wc_dropdown_variation_attribute_options_sub( $args = array() ) { 
    $args = wp_parse_args( apply_filters( 'woocommerce_dropdown_variation_attribute_options_args', $args ), array( 
        'options' => false,  
        'attribute' => false,  
        'product' => false,  
        'selected' => false,  
        'name' => '',  
        'id' => '',  
        'class' => '',  
        'show_option_none' => __( 'Choose an option', 'woocommerce' ) 
 ) ); 

    $options = $args['options']; 
    $product = $args['product']; 
    $attribute = $args['attribute']; 
    $name = $args['name'] ? $args['name'] : 'attribute_' . sanitize_title( $attribute ); 
    $id = $args['id'] ? $args['id'] : sanitize_title( $attribute ); 
    $class = $args['class']; 

    if ( empty( $options ) && ! empty( $product ) && ! empty( $attribute ) ) { 
        $attributes = $product->get_variation_attributes(); 
        $options = $attributes[ $attribute ]; 
    } 

   // echo '<fieldset id="' . esc_attr( $id ) . '" class="' . esc_attr( $class ) . '" name="' . esc_attr( $name ) . '" data-attribute_name="attribute_' . esc_attr( sanitize_title( $attribute ) ) . '">'; 

/*    if ( $args['show_option_none'] ) { 
*        echo '<option value="">' . esc_html( $args['show_option_none'] ) . '</option>'; 
    } */

    if ( ! empty( $options ) ) { 
        if ( $product && taxonomy_exists( $attribute ) ) { 
            // Get terms if this is a taxonomy - ordered. We need the names too. 
            $terms = wc_get_product_terms( $product->id, $attribute, array( 'fields' => 'all' ) ); 

            foreach ( $terms as $term ) { 
                if ( in_array( $term->slug, $options ) ) { 
                    print_attribute_radio( $checked_value, $term->slug, $term->name, $sanitized_name );
                } 
            } 
        } else { 
            foreach ( $options as $option ) { 
                // This handles < 2.4.0 bw compatibility where text attributes were not sanitized. 
                $selected = sanitize_title( $args['selected'] ) === $args['selected'] ? selected( $args['selected'], sanitize_title( $option ), false ) : selected( $args['selected'], $option, false ); //this should probably be changed to checked similar to how the plugin you wrote has it.
                $value = esc_attr( $option );
                $id = esc_attr( $attribute . '_v_' . $value );
                $modified_label = esc_html( apply_filters( 'woocommerce_variation_option_name', $option ) );
                printf ('<div><input type="radio" name="%1$s" value="%2$s" id="%3$s"><label for="%3$s">%4$s</label></div>', $name, $value, $id, $modified_label ); // need to look at switching selected to checked
            } 
        } 
    } 

   // echo '</fieldset>'; 
} 
